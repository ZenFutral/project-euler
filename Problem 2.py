# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
# Answer: 4613732
# Average Runtime: 0.0s

from time import time
from statistics import mean

runCount = 10
runDurations = []

def run():
    sequence : list[int] = [1, 2]
    maximum : int = 4000000
    evenSequence : list[int] = []

    while sequence[-1] <= maximum:
        num1 : int = sequence[-1]
        num2 : int = sequence[-2]
        num3 : int = num1 + num2

        sequence.append(num3)

    [evenSequence.append(num) for num in sequence if num % 2 == 0]

    answer : int = sum(evenSequence)
    return answer

# ================================
# NO PROBLEM LOGIC BELOW THIS LINE
# ================================
for count in range(runCount):
    startTime = time()
    answer = run()
    runDurations.append(time() - startTime)

averageRuntime = mean(runDurations)
print(f"Answer: {answer}")
print(f"Runtime: {round(averageRuntime, 10)}s")
